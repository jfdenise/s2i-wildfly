apiVersion: v1
kind: Template
metadata:
  name: wildfly-galleon-s2i-app-server-builder
  annotations:
    iconClass: icon-wildfly
    openshift.io/display-name: Galleon S2I App & WildFly builder
    openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/long-description: Provision WildFly server image using galleon and build/deploy app.
    description: Provision WildFly server image using galleon and build/deploy app.
  message: Builds created.
labels:
  template: wildfly-galleon-s2i-app-server-builder
parameters:
- name: GALLEON_GIT_REPO
  description: The Galleon server description git repository
  displayName: Galleon server description git repository
  required: true
  value: https://github.com/jfdenise/s2i-wildfly
- name: GALLEON_GIT_CONTEXT_DIR
  description: The Galleon server description git repository sub directory
  displayName: Galleon server description git repository sub directory
  required: false
  value: 17.0/galleon/cloud-profile-all-ds
- name: GALLEON_GIT_BRANCH
  description: The Galleon server description git branch
  displayName: Galleon server description git branch
  required: true
  value: master
- name: IMAGE_VERSION
  description: WildFly image version to use (latest, full, 16.0.0.Final)
  displayName: WildFly image version
  required: true
  value: latest
- name: APP_NAME
  description: The application name. Name is assigned to all of the application objects defined in this template.
  displayName: Image Name
  required: true
  value: my-app
- name: GIT_REPO
  description: The application git repository
  displayName: git repository
  required: true
  value: https://github.com/jfdenise/s2i-wildfly
- name: GIT_CONTEXT_DIR
  description: The application git repository sub directory
  displayName: git repository sub directory
  required: false
  value: 17.0/test/test-app-postgres
- name: GIT_BRANCH
  description: The application git branch
  displayName: git branch
  required: true
  value: master
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}-server-artifacts
    name: ${APP_NAME}-server-artifacts
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}-artifacts
    name: ${APP_NAME}-artifacts
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-server-artifacts
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-server-artifacts:latest
    runPolicy: Serial
    source:
      git:
        ref: ${GALLEON_GIT_BRANCH}
        uri: ${GALLEON_GIT_REPO}
      contextDir: ${GALLEON_GIT_CONTEXT_DIR}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: galleon-wildfly-builder:${IMAGE_VERSION}
        env:
          - name: "GALLEON_BUILD"
            value: "true"
      type: Source
    triggers:
    - imageChange:
      type: ImageChange
    - type: ConfigChange
    - generic:
        secret: secret101
      type: Generic
    - github:
      secret: secret101
    type: GitHub
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-artifacts
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-artifacts:latest
    runPolicy: Serial
    source:
      git:
        ref: ${GIT_BRANCH}
        uri: ${GIT_REPO}
      contextDir: ${GIT_CONTEXT_DIR}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: galleon-wildfly-builder:${IMAGE_VERSION}
      type: Source
    triggers:
    - imageChange:
      type: ImageChange
    - type: ConfigChange
    - generic:
        secret: secret101
      type: Generic
    - github:
      secret: secret101
    type: GitHub
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      dockerfile: |-
        FROM wildfly-runtime-dependencies-image:${IMAGE_VERSION}
        COPY /wildfly /opt/jboss/wildfly
        COPY /deployments /opt/jboss/wildfly/standalone/deployments
        COPY /configuration/ /opt/jboss/wildfly/standalone
        COPY /provided_modules /opt/jboss/wildfly/provided_modules
        RUN chown -R 1001:0 /opt/jboss/wildfly && chmod -R ug+rwX /opt/jboss/wildfly
        USER 1001
        EXPOSE 8080 9090
        CMD ["/opt/jboss/wildfly/bin/standalone.sh", "-b", "0.0.0.0", "-bmanagement", "0.0.0.0"]
      images:
        - from: 
            kind: ImageStreamTag
            name: ${APP_NAME}-server-artifacts:latest
          paths: 
          - sourcePath: /output/wildfly
            destinationDir: "."
        - from: 
            kind: ImageStreamTag
            name: ${APP_NAME}-artifacts:latest
          paths: 
          - sourcePath: /wildfly/standalone/deployments/
            destinationDir: "."
          - sourcePath: /wildfly/standalone/configuration/
            destinationDir: "."
          - sourcePath: /wildfly/provided_modules
            destinationDir: "."
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: wildfly-runtime-dependencies-image:${IMAGE_VERSION}
      type: Docker
    triggers:
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-artifacts:latest
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-server-artifacts:latest
    - type: ConfigChange
    